//*
Author: Kayode Adejuwon
Date: 4/19/2020
Teacher: Dr. Tyson McMillan
//Using object oriented coding for a scoreboard:  Basketball, classes Team, Scoreboard
#include <iostream>
#include <unistd.h> //for sleep command
#include <string>
#include <iomanip> //for setw
using namespace std; 

class Team
{
  private: 
    int score; 
    int fouls; 
    int playerNames;
    string name; 
    bool bonusFirstHalf;
    bool bonusSecondHalf; 
  public: 
    Team()//default constructor  
    {
      score = 0;
      fouls = 0; 
      playerNames = 0;
      name = "DefaultT1Name";
      bonusFirstHalf = false; 
      bonusSecondHalf = false; 
    }  
    void setScore(int s) { score = s; }
    void setFouls(int f) { fouls = f; }
    void setName(string n) { name = n; }
    void setPlayerNames(int p) { playerNames =p; }
    void setBonusFirstHalf(bool bFH) { bonusFirstHalf = bFH; }
    void setBonusSecondHalf(bool bSH) { bonusSecondHalf = bSH; }
    double getScore() const { return score; }
    double getFouls() const { return fouls; }
    string getName() const { return name; }
    string getplayName() const { return name; }
    bool getBonusFirstHalf() const { return bonusFirstHalf; }
    bool getBonusSecondHalf() const { return bonusSecondHalf; }
};

class Scoreboard
{
  private: 
    int period;
    bool poss; //true = home, false = visitor 
    Team team1; //double dot notation to get its data
    Team team2; //double dot notation to get its data
    int playerNumber;
    int getplayerNames;
    int playerFouls; 
    int name;
    int minutes;
    int seconds; 
  public:
    Scoreboard() //default constructor 
    {
      period = 1;
      poss = true; //home team has the ball intially 
      playerNumber = 0;
      playerFouls = 0; 
    
      minutes = 11;
      seconds = 59; 
    }  
    void setPeriod(int p) { period = p; }
    void setPoss(bool po) { poss = po; }
    void setTeam1(Team t1) { team1 = t1; } //remember when the object changes
    void setTeam2(Team t2) {team2 = t2; } //remember when the object changes
    void setplayerFouls(int pl) { playerFouls = pl; }
    void setPlayerNumber(int pn) { playerNumber = pn; }
    void setName( int n) {name = n; }
    void setPlayerFouls(int pf) { playerFouls = pf; }
    void setMinutes(int m) { minutes = m; }
    void setSeconds(int s) { seconds = s; }
    int getPeriod() const { return period; }
    bool getPoss() const { return poss; }
    Team getTeam1() const { return team1; }
    Team getTeam2()  const { return team2; }
    int getplayerFouls() const { return playerFouls; }
    int getName() const {return name; }
    int getPlayerNumber() const { return playerNumber; }
    int getPlayerFouls() const { return playerFouls; }
    int getMinutes() const { return minutes; }
    int getSeconds() const { return seconds; }

    void showScoreboard()
    { 
      string color = ""; 
      string reset = "\x1b[0m";
        
        system("clear"); //clear the screen 
        
        //Show Scoreboard

      cout <<"==================================================\n";
      cout <<"\t\t:::::::::::Information::::::::::\n";
      cout <<"\tThis program use C++ Object Oriented classes\n";
      cout <<"\tto create a Football Scoreboard\n\n";

        color = "\x1b[32;1m"; //green 
        cout << color << "             Football Scoreboard\n"<< reset;
        for(int i = 0; i < 50; i++) { cout << "*"; }
        cout << endl; 
        
       cout << "___________Scoreboard____________\n\n";

        cout << color << "HOME:::\t        |   \t :::VISITOR\n\n" << reset;

        

        cout << setw(20) << left << team1.getName() << "";  
        cout << setw(20) << right << team2.getName() << endl;
        color = "\x1b[91;1m"; //red 
        cout << "\t" << team1.getScore() << "\t\t\t\t\t\t" << team2.getScore() << endl;
        cout << "\t\t\tPERIOD: " << period << endl; 

        //dealing with Boolean data
        if(poss == true)
        {
          cout << "\t\t\t\t\t\t" << endl; 
        }
        else
        {
          cout << "\t\t\t\t\t\t" << endl; 
        }
        cout << endl << color << "\t\t  PLAYER  FOULS" << reset;
        cout << endl << "  FOULS" << "\t\t\t\t\t  FOULS" << endl;
  
         cout << endl << "  BONUS" << "\t\t\t\t\t  BONUS" << endl;
        cout << "\n***********************************************";
    }
};

 //A void function to instantiate and control scoreboard data 
void scoreboardControls()
{
   //Show Scoreboard
  
  Scoreboard s; //instantiate the the scoreboard object s
  Team tOneMain; //team Object that will become a member of scoreboard S
  Team tTwoMain; //team Object that will become a member of scoreboard S
  char decision = '\0';
  int newScore = 0; 
  string newName = ""; 

  s.setTeam1(tOneMain); // placed update Team1 object in s
  s.setTeam1(tTwoMain); // placed update Team2 object in s
  s.setTeam2(tTwoMain);
  s.setTeam1(tOneMain); 


  //Access the data outside of the class 
  //*cout << "\n Period here " << s.getPeriod() << endl; 
  cout << "\n Team 1 intial name: " << s.getTeam1().getName() << endl; 


  //work with the scoreboard and menu 
  do
  {
        //show the scoreboard and clear the screen each time 
        s.showScoreboard();
       
       //Menu options for the user 
        cout << "\nMenu: " << endl; 
        cout << "A. Update Team 1 Score" << endl; 
        cout << "B. Update Team 1 Name" << endl; 
        cout << "C. Update Team 2 Score" << endl; 
        cout << "D. Update Team 2 Name" << endl; 
        cout << "E. Update playerFouls" << endl;
        cout << "F. Update PlayerNumber" <<endl;
        cout << "G. Update Minutes" << endl;
        cout << "H. Update Second" <<endl;
        cout << "N. update name" << endl;
        cout << "X. To Exit" << endl; 
        cin >> decision; 

        if(decision == 'a' || decision == 'A')
        {
          cout << "Team 1 score update. \n";
          cout << "What is the new score? > ";
          cin >> newScore; 
          tOneMain.setScore(newScore);
          cout << "\nUpdating new score for Team1 to..." << tOneMain.getScore() << endl;
          sleep(3); //pause 3 seconds.
          
        }
        else if(decision == 'b' || decision == 'B')
        {
          cout << "Team 1 NAME update. \n";
          cout << "What is the new Name? > ";
          cin >> newName; 
          tOneMain.setName(newName);
          cout << "\nUpdating new name for Team1 to..." << tOneMain.getName() << endl;
          sleep(3); //pause 3 seconds. 
        }
         if(decision == 'c' || decision == 'C')
        {
          cout << "Team 2 score update. \n";
          cout << "What is the new score? > ";
          cin >> newScore; 
          tTwoMain.setScore(newScore);
          cout << "\nUpdating new score for Team2 to..." << tTwoMain.getScore() << endl;
          sleep(3); //pause 3 seconds.
          
        }
        else if(decision == 'd' || decision == 'D')
        {
          cout << "Team 2 NAME update. \n";
          cout << "What is the new Name? > ";
          cin >> newName; 
          tTwoMain.setName(newName);
          cout << "\nUpdating new name for Team2 to..." << tTwoMain.getName() << endl;
          sleep(3); //pause 3 seconds. 
        }
        else if(decision == 'e' || decision == 'E')
        {
        cout << "Team 1 playerFouls update. \n" ;  
        cout << "Enter the player's name > ";
        cin >> newName;
        cout << "\nUpdating new name for Team1 to..." << tOneMain.getName() << endl;
          sleep(3); //pause 3 seconds. 
        }
        else if(decision == 'n' || decision == 'N')
        {
          cout << "Team 2 NAME update. \n";
          cout << "What is the new Name? > ";
          cin >> newName; 
          tOneMain.setName(newName);
          cout << "\nUpdating new name for Team2 to" << tTwoMain.getName() << endl;
          sleep(3); //pause 3 seconds. 
        }
        else if(decision == 'x' || decision == 'X')
        {
          cout << "\nEXIT. !!!" << endl; 
        }

        s.setTeam1(tOneMain); //setTeam1 to the latest data 
        s.setTeam2(tTwoMain); //setTeam2 to the latest data 
      
  }while(decision != 'x' && decision != 'X');     


}
int main() 
{
   
   scoreboardControls(); //run the scoreboard processes and menus

  return 0; 
}
